<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"  
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd

		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
<!-- MySQL连接方式 -->
<bean 
	id = "dbcp"
	class = "org.apache.commons.dbcp.BasicDataSource">
	<!-- 用户名 -->
	<property name="username" value = "root">
	</property>
	<!-- 密码 -->
	<property name="password" value = "123456">
	</property>
	<!-- 驱动 -->
	<property name="driverClassName"
	 value = "com.mysql.jdbc.Driver">
	 </property>
	 <!-- 连接 -->
	<property name="url"
	 value = "jdbc:mysql:///cloud_note?useUnicode=true&amp;characterEncoding=utf8">
	 </property>
</bean>
	<!-- Oracle连接方式 -->
	<!-- 
<bean id = "dbcp" class = "org.apache.commons.dbcp.BasicDataSource">
	 用户 
	<property name="username" value = "system"></property>
	 密码
	<property name="password" value = ""></property>
	 驱动 
	<property name="driverClassName" value = "oracle:jdbc:drive:OracleDriver"></property>
	连接 
	<property name="url" value = "jdbc:oralce:thin:@localhost:1521:myorcale" ></property>	 
</bean>
	 -->
	 
<bean id = "ssf" 
class = "org.mybatis.spring.SqlSessionFactoryBean">
	<!-- 加载数据库 -->
	<property name="dataSource" ref = "dbcp">
	</property>
	<!-- 加载SQL配置文件 -->
	<property name="mapperLocations"
 	value = "classpath:org/anonymous/note/sql/*.xml">
 	<!-- 根据自己的包填写.. -->
 	<!-- mybtis配置 -->
</property>
</bean>	 

<bean class = "org.mybatis.spring.mapper.MapperScannerConfigurer">
	<property name="basePackage"
	 	value = "org.anonymous.note.dao">
	 	<!-- 加载dao包 -->
	</property>
	<!-- 注入sqlSessionFactory -->
</bean>	 
<!-- 开启扫描Controller Service -->
<!-- 看你的controller和service放在哪个包..写他们相同的路径 -->
<context:component-scan base-package="org.anonymous.note"/>
<!-- 开启注解注入handleMapper -->
<mvc:annotation-driven/>	

<!-- 配置事务管理组件 
-->

<!-- 注解配置方式 -->
<bean id = "txManager"
	  class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref = "dbcp"></property>
</bean>

<!-- 开启事物注解标记@Transactional -->
<!-- 当调用带@Transactional标记的方法时,
	将txManager事务管理能切入进去 -->

	<!-- 注解的方式启动
<tx:annotation-driven 
	transaction-manager="txManager" proxy-target-class="true"/>	
	 -->
<!-- 
 -->	 
 <!-- XML的方式启用配置事物 -->
 <!-- 使用xml的方式需要将xml中的jee改成aop的形式 -->
 <tx:advice id ="txAdvice"
 transaction-manager="txManager">
 <tx:attributes>
 <tx:method name="regist"/>
 <tx:method name="*"/>
 </tx:attributes>
 </tx:advice>
 
 <aop:config>
  <aop:pointcut id="target" 
    expression="within(org.anonymous.note.service..*)"/>
  <aop:advisor advice-ref="txAdvice" 
   pointcut-ref="target"/>
  </aop:config>
  
  
  
  
	 <!-- AOP实例 -->
	 <!-- 组件的实例化 
	 -->
	 <!-- 使用XML方式来使用AOP -->
	 	<bean id = "noteLogger"
		  class = "org.anonymous.note.aspect.NoteLogger">
	</bean>
	
	<!-- 
	 -->
	<aop:config>
		<!-- 将noteLogger定义为切面组件  --> 
		<aop:aspect ref = "noteLogger">
			<aop:after method="alogger"
					   pointcut="within(org.anonymous.note.controller..*)"/>
					  <!--  这里的pointcut是自己的controller包 -->
		</aop:aspect>
		<aop:aspect>
		</aop:aspect>
	</aop:config>
	
	<!-- 使用AOP注解方式来使用AOP -->
	<aop:aspectj-autoproxy/>
</beans>